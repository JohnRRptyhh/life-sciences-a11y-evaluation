{"status": {"success": false, "error": "Process failed. (failed with error: (node:15177) UnhandledPromiseRejectionWarning: Error: Protocol error (Runtime.callFunctionOn): Target closed.\n    at /var/websites/wave/d5/core/node_modules/puppeteer/lib/cjs/puppeteer/common/Connection.js:208:63\n    at new Promise (<anonymous>)\n    at CDPSession.send (/var/websites/wave/d5/core/node_modules/puppeteer/lib/cjs/puppeteer/common/Connection.js:207:16)\n    at JSHandle.jsonValue (/var/websites/wave/d5/core/node_modules/puppeteer/lib/cjs/puppeteer/common/JSHandle.js:176:49)\n    at /var/websites/wave/d5/core/api_runner.js:178:27\n    at Array.forEach (<anonymous>)\n    at /var/websites/wave/d5/core/api_runner.js:177:9\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:15177) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\n(node:15177) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n"}}